FROM clojure:tools-deps AS builder
WORKDIR /usr/src/app
COPY service .
RUN clojure -T:build uber :uber-file \"target/app.jar\"

FROM clojure:tools-deps AS content
RUN apt update -y && apt install -y nodejs npm
WORKDIR /usr/src/app
COPY web/package*.json .
RUN npm install
COPY web .
RUN npm run release

FROM ghcr.io/graalvm/native-image:latest AS native
WORKDIR /usr/src/app
COPY --from=builder /usr/src/app/target/app.jar /usr/src/app/app.jar
COPY --from=content /usr/src/app/resources /usr/src/app/resources
RUN native-image -cp app.jar:resources/ -jar app.jar \
       -H:Name=app \
       -H:+ReportExceptionStackTraces \
       -H:CCompilerOption=-pipe \
       -H:IncludeResources=public/.* \
       -H:Log=registerResource:3 \
       -J-Dclojure.spec.skip.macros=true \
       -J-Dclojure.compiler.direct-linking=true \
       -J-Xmx3G \
       -Dio.pedestal.log.defaultMetricsRecorder=nil \
       --initialize-at-build-time \
       --enable-http \
       --enable-https \
       --enable-url-protocols=http,https \
       --enable-all-security-services \
       --no-fallback --no-server \
       --report-unsupported-elements-at-runtime \
       --allow-incomplete-classpath \
       --native-image-info \
       --static \
       --verbose

FROM alpine AS runner
RUN apk add --update-cache wireguard-tools
COPY --from=native /usr/src/app/app /
COPY --from=content /usr/src/app/resources /resources
EXPOSE 8080
CMD ["/app"]
